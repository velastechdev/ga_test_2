name: Deploy Metabase Staging

on:
  push:
    branches:
      - '*DEPLOY-VERSION'

jobs:
  deploy_metabase_staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: 'repo'  # Adding path to isolate workspace

      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'

      - name: Run Export Script
        id: export
        working-directory: ./repo  # Run in the checked out directory
        env:
          API_KEY: ${{ secrets.METABASE_STAGING_API_KEY }}
          ENDPOINT_URL: ${{ vars.METABASE_STAGING_ENDPOINT_URL }}
          COLLECTION: ${{ vars.DEFAULT_COLLECTION }}
        run: |
          echo "Current directory: $(pwd)"
          echo "Files before export:"
          ls -la
          
          echo "Running Export Script..."
          go run main.go export \
            endpoint_url=$ENDPOINT_URL \
            api_key=$API_KEY \
            collection=$COLLECTION
          
          echo "Files after export:"
          ls -la
          echo "Git status:"
          git status --porcelain

      - name: Create and checkout new branch
        if: ${{ steps.export.outcome == 'success' }}
        id: create_branch
        working-directory: ./repo
        run: |
          DEPLOY_BRANCH="${GITHUB_REF##*/}"
          TEMP_BRANCH="export-${DEPLOY_BRANCH}-$(date +%s)"
          git checkout -b $TEMP_BRANCH
          echo "temp_branch=$TEMP_BRANCH" >> $GITHUB_OUTPUT
          echo "deploy_branch=$DEPLOY_BRANCH" >> $GITHUB_OUTPUT

      - name: Commit changes to temp branch
        if: ${{ steps.export.outcome == 'success' }}
        working-directory: ./repo
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Debugging output
          echo "Git status before add:"
          git status --porcelain
          
          git add .
          
          echo "Git status after add:"
          git status --porcelain
          
          if ! git diff --cached --quiet; then
            git commit -m "Add exported serialization from ${{ steps.create_branch.outputs.deploy_branch }}"
            git push origin ${{ steps.create_branch.outputs.temp_branch }}
          else
            echo "No changes to commit."
            # Fail the step if no changes were detected
            exit 1
          fi

      # - name: Create Pull Request
      #   if: ${{ steps.export.outcome == 'success' }}
      #   id: create_pr
      #   uses: peter-evans/create-pull-request@v5
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     path: ./repo
      #     branch: ${{ steps.create_branch.outputs.temp_branch }}
      #     base: main  # Target branch
      #     title: "Metabase Export: ${{ steps.create_branch.outputs.deploy_branch }}"
      #     body: "Automated PR for Metabase export changes from ${{ steps.create_branch.outputs.deploy_branch }}"
      #     draft: false
      #     labels: "automated"

      # - name: Delete original DEPLOY-VERSION branch
      #   if: ${{ steps.export.outcome == 'success' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     if [[ "${{ steps.create_branch.outputs.deploy_branch }}" == "main" ]]; then
      #       echo "Not deleting the main branch."
      #     else
      #       curl -X DELETE \
      #         -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #         -H "Accept: application/vnd.github+json" \
      #         "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/${{ steps.create_branch.outputs.deploy_branch }}"
      #     fi