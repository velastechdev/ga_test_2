name: Deploy Metabase Staging

on:
  push:
    branches:
      - '*DEPLOY-VERSION'

jobs:
  deploy_metabase_staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: 'repo'  # Isolate in subdirectory

      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'

      - name: Run Export Script
        id: export
        working-directory: ./repo
        env:
          API_KEY: ${{ secrets.METABASE_STAGING_API_KEY }}
          ENDPOINT_URL: ${{ vars.METABASE_STAGING_ENDPOINT_URL }}
          COLLECTION: ${{ vars.DEFAULT_COLLECTION }}
        run: |
          go run main.go export \
            endpoint_url=$ENDPOINT_URL \
            api_key=$API_KEY \
            collection=$COLLECTION

      - name: Create and checkout new branch
        if: ${{ steps.export.outcome == 'success' }}
        id: create_branch
        working-directory: ./repo
        run: |
          DEPLOY_BRANCH="${GITHUB_REF##*/}"
          TEMP_BRANCH="export-${DEPLOY_BRANCH}-$(date +%s)"
          git checkout -b $TEMP_BRANCH
          echo "temp_branch=$TEMP_BRANCH" >> $GITHUB_OUTPUT
          echo "deploy_branch=$DEPLOY_BRANCH" >> $GITHUB_OUTPUT

      - name: Commit changes to temp branch
        if: ${{ steps.export.outcome == 'success' }}
        working-directory: ./repo
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Add exported serialization from ${{ steps.create_branch.outputs.deploy_branch }}"
            git push origin ${{ steps.create_branch.outputs.temp_branch }}
          else
            echo "No changes to commit."
            exit 1
          fi

      - name: Create Pull Request
        if: ${{ steps.export.outcome == 'success' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.create_branch.outputs.temp_branch }}
          base: main
          path: repo  # Critical addition
          title: "Export serialization from ${{ steps.create_branch.outputs.deploy_branch }}"
          body: "Automated PR with exported serialization"
          delete-branch: true

      - name: Delete original DEPLOY-VERSION branch
        if: ${{ steps.export.outcome == 'success' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ steps.create_branch.outputs.deploy_branch }}" == "main" ]]; then
            echo "Not deleting the main branch."
          else
            curl -X DELETE \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/${{ steps.create_branch.outputs.deploy_branch }}"
          fi